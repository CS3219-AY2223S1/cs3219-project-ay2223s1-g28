version: "3.8"

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - 3000:3000
    depends_on:
      [user-service, matching-service, communication-service, collaboration-service, question-service]

  user-service:
    container_name: user-service
    build:
      context: ./user-service
    ports:
      - 8000:8000
    depends_on:
      [mongo-user, redis-user]
    volumes:
      - ./user-service:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run dev

  mongo-user:
    container_name: mongo-user
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongo-user-volume:/data/db

  redis-user:
    container_name: redis-user
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis-user-volume:/data

  matching-service:
    container_name: matching-service
    build:
      context: ./matching-service
    ports:
      - 8001:8001
    volumes:
      - ./matching-service:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run dev

  communication-service:
    container_name: communication-service
    build:
      context: ./communication-service
    ports:
      - 8002:8002
    depends_on:
      - mongo-comm
    volumes:
      - ./communication-service:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run dev

  mongo-comm:
    container_name: mongo-comm
    image: mongo
    ports:
      - 27019:27017
    volumes:
      - mongo-comm-volume:/data/db

  collaboration-service:
    container_name: collaboration-service
    build:
      context: ./collaboration-service
    ports:
      - 8003:8003
    depends_on:
      - redis-collab
    volumes:
      - ./collaboration-service:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run dev

  redis-collab:
    container_name: redis-collab
    image: redis
    ports:
      - 6380:6379
    volumes:
      - redis-collab-volume:/data

  question-service:
    container_name: question-service
    build:
      context: ./question-service
    ports:
      - 8004:8004
    depends_on:
      - mongo-question
    volumes:
      - ./question-service:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run dev

  mongo-question:
    container_name: mongo-question
    image: mongo
    ports:
      - 27018:27017
    volumes:
      - mongo-question-volume:/data/db

  gateway:
    container_name: gateway
    build:
      context: ./gateway
    ports:
      - 8080:8080
    restart: always
    depends_on:
      [frontend, user-service, matching-service, communication-service, collaboration-service, question-service]

volumes:
  mongo-user-volume:
  mongo-comm-volume:
  mongo-question-volume:
  redis-user-volume:
  redis-collab-volume:
