server {
  listen 8080;

  # Internal auth route only accessible by NGINX
  location = /auth {
    internal;
    proxy_pass http://auth-service:8005;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
  }

  # Public routes
  location ~ ^/(signin|verify-jwt|signout)$ {
    proxy_pass http://auth-service:8005;
  }

  # Public routes
  location /api/user-service/signup {
    proxy_pass http://user-service:8000/api/user/signup;
  }

  location /api/user-service {
    # No authentication required for preflight requests
    if ($request_method = OPTIONS) {
      add_header Access-Control-Allow-Origin 'http://localhost:3000';
      add_header Access-Control-Allow-Credentials 'true';
      add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
      add_header Access-Control-Allow-Headers 'content-type';
      return 204;
    }

    # Authentication
    auth_request /auth;
    auth_request_set $auth_cookie $upstream_http_set_cookie;
    add_header Set-Cookie $auth_cookie;
    auth_request_set $auth_status $upstream_status;

    # Reverse proxy
    proxy_pass http://user-service:8000/api/user;
  }

  # Additional directives below are to enable Socket.IO server behind a reverse proxy
  location /api/matching-service/socket {
    proxy_pass http://matching-service:8001;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  # Additional directives below are to enable Socket.IO server behind a reverse proxy
  location /api/communication-service/socket {
    proxy_pass http://communication-service:8002;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location /api/communication-service {
    proxy_pass http://communication-service:8002/api/chat;
  }

  # Additional directives below are to enable Socket.IO server behind a reverse proxy
  location /api/collaboration-service/socket {
    proxy_pass http://collaboration-service:8003;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location /api/question-service {
    proxy_pass http://question-service:8004/api/question;
  }
}
